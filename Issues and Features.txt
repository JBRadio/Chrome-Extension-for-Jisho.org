Issue and Features


Table of Contents
  KNOWN ISSUES
  THOUGHTS / IMPROVEMENTS
  COMPLETED
  

------------
KNOWN ISSUES 
------------

++ <iframe> Functionality (Loading, CSS, Buttons interacting with <iframe>, Content Script)
    #. Accessing pages that lead outside of Jisho.org domain can cause issues (Asking admin to review)

++ Google Chrome Extension UI (popup.css, popup.html, resizing extension, device specific, other)

++ Google Chrome tab browsing (Content script)
    #. Accessing Jisho.org in a tab will take advantage of the theme set in the extension

++ Session Persistence (New session of the extension doesn't remember what happened in the old session)
    #. Search bar typed characters aren't remembered on launch
    #. "Back" page history isn't remembered (window.history.back())


<iframe> Functionality (Loading, CSS, Buttons interacting with <iframe>, Content Script)
----------------------

    Issue: Accessing pages that lead outside of Jisho.org domain can cause issues
        Clicking on a link in the About page for Jisho.org could lead you outside the Jisho.org domain and cause issues with links to be used with the <iframe>.
    Workaround:
        The current workaround is to suggest not clicking on these links in the extension for now. Click the link in one of the tabs in the main browser window.
    Potential Dev Solutions:
        (A) Allow bottom menu links to work in <iframe> when the document.location.href does not contain
            Jisho.org.
        (B) Modify content script to change all links in Jisho.org's about page to open in a new tab.
        (C) Submit forum discussion for webmaster to make all external links open in a new tab. I have    
            submitted discussion: http://jisho.org/forum/56fc6ae0d5dda719140002d0-please-consider-updating-links-that-lead-outside-jisho-dot-org-to-open-in-a-new-tab


    Issue: <iframe> may load an invalid page on startup/seed.
        Starting the Jisho.org extension may show a Jisho.org webpage that is invalid. Jisho will say that the page you are on doesn't exist. On top of this, it may seem confusing as to what you can do next as the search bar is not present on the error page. Of course, I know you can use the link at the bottom to open another Jisho.org url but it may be too confusing for others. 
    Workaround:
        Educate others to make sure that text selections are words or japanese characters. Anything else could ruin the Jisho.org search if not properly filtered.
    Potential Dev Solutions:
        (A) If a text selection is to be used, filter/validate it first. Replace all symbols with a space (" "). Then use trim to remove preceeding and trailing spaces. If the remaining text is invalid, resort to the last loaded search page (default when no text selection is found). The invalid reasoning could be logged in console.log(). Text selection may be invalid to search on if trimmed text is:
         - shortened to less than 3 roman characters
         - has a length of 0
        (B) Educate users on Readme.md about text selection seeding and how it could disrupt the Jisho.org extension user's experience.
    Doesn't break Jisho: ( ) , @
        Find what breaks Jisho when you can reproduce... use console.log() to report it.
        
    Issue 4:
Dark theme isn't always injected when <iframe> loads a Jisho.org page.

Potential Fix:
Do the messaging to check for current theme along with Chrome.API for local storage. One is faster than the other but at least the theme will be correct. Even if we inject <style> twice, the Light theme should remove all of them when toggled.


Google Chrome Extension UI (popup.css, popup.html, resizing extension, device specific, other)
--------------------------


Google Chrome tab browsing (Content script)
--------------------------

    Issue: Accessing Jisho.org in a tab will take advantage of the theme set in the extension
        Setting the theme to dark in the extension will overwrite the CSS in any tab used with Jisho.org
    Workaround:
        Use the extension to set the theme to "Light" if dark is not the desired affect.
    Potential Dev Solutions:
        Look up how to identify if your current document is embedded into another document or has a parent document. If you have a parent document or know you are embedded, override the CSS, otherwise, do not. 

Session Persistence (New session of the extension doesn't remember what happened in the old session)
-------------------

   Issue: Search bar typed characters (typed in a previous session) aren't remembered on launch
      If you typed something into the search bar within the extension, closed the extension in any way, and 
      then opened the extension, your typed text in the searchbar will be gone. This is not saved. Instead
      the <iframe> URL will be seeded in one of the following conditions: Text selection from page > Last
      loaded search page results > Jisho.org homepage (default).
     Workaround:
      (i) Use a save method outside of the extension
          - Copy text from searchbar into another editor to save progress.
     Potential Dev Soluions:
      (A) Add an event listener to the injected DOM, something like window.unload or window.beforeunload, 
           to chrome.runtime.sendMessage and update the local storage value for something like "lastTyped"
     Cons:
      (A) How does the window.unload event tell the difference between recently typed text and the current   
           input text? Could the event not work because Chrome closes the extension before a message is 
           handled on the extension side?
           
           - Auto-save typed search
     Add an event listener to the input box on the Content Script
      On change, a chrome.runtime.sendMessage fires and is retrieved by the extension
       Popup.js processes the message and stores the data in lastTyped
     When the extension loads, first we check to seed the first URL <iframe> opens by
      #. Text selection > Last Typed > Last loaded search > Jisho.org
       If no page text found, check the saved "lastTyped"
        If no "last Typed, check the last loaded search
         If no "lastSearched", default to Jisho.org
       If text selected and last typed, confirm, before loading the <iframe> if the user would like text
        selection or lastTyped.
         - Alternatively, we could add an action sheet item to "Open last typed search" or something like that
           
           
           
   Issue: "Back" page history isn't remembered (window.history.back())
      If you've used the extension before and started it again, the "Back" button will only work on new
      pages loaded in that session.
     Workaround:
      (i) If you've logged into Jisho.org, you will have a list of recent searches on the bottom of the page.
     Potential Dev Solutions:
      (A) Keep track of loaded pages, between 5-10, in local storage. 
           When loaded pages are tracked:
            - When the extension loads and text selection is present.
            - When the user searches for new terms.
           When loaded pages are not tracked:
            - When the back or forward button is pressed.
               * Compare the loaded page to our history. If it is there, don't save or change its position.
           When the back button is clicked:
            - When check to see if the <iframe> has a history to use (window.history.back())
            - Secondly, we default to local storage:
              * We get the current URL, compare it to the position in local storage and go back if
                we have an earlier saved page.
      (B) Create a link in the bottom bar called History (Only works with logged in account)
           When clicked, the content script gathers "Most Recent Searches" and sends to Popup.js.
            Then, Popup.js displays a <ul><li> of the search terms which the user can click.
           local storage. 



-----------------------
THOUGHTS / IMPROVEMENTS
-----------------------

 ++ Options page
 ++ Bottom bar for additional features as links
 ++ If <iframe> takes a considerable time to load jisho.org on extension open


   - If <iframe> takes a considerable time to load jisho.org on extension open, 
      consider using a persistent background html page (background.html) to host the <iframe>
      in the background and allow popup.html to adopt and/or clone the <iframe> node on the 
      popup.html page.
       Pros: Hopefully the loading of Jisho.org website is as short as possible consistently. 
             Also, last search results will appear when the extension opens and no current-tab 
             selected text is present.
       Cons: Persistent background.html will have an active process, which means that everything
             loading in the <iframe> or Jisho.org will continue to do so in the background. This
             will include advertisements I assume. 
       References:
             Google Background Pages: https://developer.chrome.com/extensions/background_pages
             Adopt/Clone iFrame Node Discussion: https://groups.google.com/a/chromium.org/forum/#!topic/chromium-extensions/us2cUTZl5ws
             DevDocs Clone: http://devdocs.io/dom/node/clonenode
             DevDocs Adopt: http://devdocs.io/dom/document/adoptnode
 
  - Bottom bar for additional features as links
     Action sheet: When a user clicks a bottom link, a <div><ul> appears at the bottom for them to 
      choose additional options.
       Go (Back, Forward, Top, Advanced Search Options, Forum, Open in a new Tab)
       Share (Bookmark, Copy link, Gmail/Email)
       Search (Text Selection, Last Characters Typed, Last Search Loaded)
       History (List Search Results (logged in feature) )
       - Maybe replace with icons
         Clock = History (<- = Back, -> = Forward)
       
     UI: 
          - Safari has on bottom: (Share), (Bookmarks), and (Switch tabs)
          - Chrome has on top: omnibox, tabs, "..." (More)
          - Bookmark: Bookmarks the current page
          - Open in a new tab: - Opens the current page in a new tab 
           (maybe user wants to use bookmarklet or something else.

  - Options page
     Remove theme button toggle for a preference on the Options page.
     Remove window button toggle for a preference on the Options page.
     Remove GitHub link for a listing on the Options page.
     Allow the user to have the CSS dark theme override preference when accessing Jisho.org outside the  
      extension (content script)
     Credits, Donate button
     Other ideas...
 
 
 
 ---------
 COMPLETED
 ---------
 
 ++ <iframe> Functionality
    #. Dark Theme: Original CSS shows first and then switches to dark (flashing of original CSS)
 
 <iframe> Functionality (Loading, CSS, Buttons interacting with <iframe>, Content Script)
 ----------------------

    Issue: Dark Theme: Original CSS shows first and then switches to dark (flashing of original CSS)
        When the url/webpage loads in the <iframe>, the content script is injected. The chrome local
        stroage API is accessed to check the currently set saved theme. If the theme is dark, the response
        will inject the CSS theme to overwrite the original CSS. The speed of this happening could vary
        in each page load. Often the result is a "flash" of original CSS and then a change to the Dark
        theme.
    Dev Comments:
        Previously we used chrome.runtime.sendMessage to communicate with the local stroage API. This was
        unecessary overhead. We now call the local storage API directly when executing the content script.
        This is much faster and hopefully to the point where this is satisfactory for most users. If there
        are slow loading times for the CSS, confirm that other factors such as internet speeds aren't
        affecting <iframe> and javascript performance.
    Completed: 2016.03.30
    Dev Comments:
        Going to add back the messaging since sometimes we can load our style before the page loads its own. Maybe both methods should allow the dark theme to stay as intended.
    Additional Comments:
        Sometimes the direct approach does not load on first try. Have both the direct and messaging approach on the first load only.
 
 
 Google Chrome Extension UI (popup.css, popup.html, resizing extension, device specific, other)
--------------------------

    Issue: Darker (perhaps VGA monitors) blend dark colors for links on popup.html
        (Tested with a 15-17 inch VGA monitor) On older monitors (VGA) where colors may not be so vibrant, bright, or defined, it may be hard to see the link colors on a pure black background. 
    Potential Dev Solutions:
        Change the color in CSS:
    /* a.dark:link, a.dark:visited { color: orange; } /* Orange is already used a lot in the extension */
    a.dark:link, a.dark:visited {color: #54D0FF;} /* Color easier to see on VGA monitors */
    Completed: 2016.04.01
        
    Issue: Extra vertical scrollbars on screens with lower screen resolutions
        (Tested with a 15-17 inch screen) Smaller screen PC resolutions in combination with smaller vertical screen heights may contribute to the Google Chrome extension appearing with an additional veritical scrollbar next to the iframe's vertical scrollbar - leading to double vertical scrollbars.
    Potential Dev Solutions:
        Make changes specific to device height and width in CSS.
        @media screen and (max-height: 600px) { 
            iframe { /* Noticed the additional vertical scrollbar with a less resolution monitor */
                height: 534px;
            }
        }
    Completed: 2016.04.01